(()=>{"use strict";const e=new class{constructor(){try{this.actions=JSON.parse(JSON.stringify(globals.actions()))}catch(e){return void this.error("Failed to load actions")}try{this.originalGame=JSON.parse(JSON.stringify(globals.game()))}catch(e){return void this.error("Failed to load originalGame")}try{this.nextGame=JSON.parse(JSON.stringify(globals.game()))}catch(e){return void this.error("Failed to load nextGame")}this.currentAction=null,this.isNewGame=!1,this.defaultSeconds=15,this.kickedPlayers=[],this.nextGame&&("timer"in this.nextGame||(this.nextGame.timer={}),"state"in this.nextGame||(this.nextGame.state={}),"players"in this.nextGame||(this.nextGame.players={}),this.nextGame.prev={},"next"in this.nextGame||(this.nextGame.next={}),"rules"in this.nextGame||(this.nextGame.rules={}),this.nextGame.events={})}on(e,t){for(var s=0;s<this.actions.length;s++)if(this.actions[s].type==e){this.currentAction=this.actions[s];let e=t(this.currentAction);if("boolean"==typeof e&&!e){this.ignore();break}}}ignore(){globals.ignore()}setGame(e){for(var t in this.nextGame.players){let s=this.nextGame.players[t];e.players[t]=s}this.nextGame=e}commit(){this.kickedPlayers.length>0&&(this.nextGame.kick=this.kickedPlayers),globals.finish(this.nextGame)}gameover(e){this.event("gameover",e)}log(e){globals.log(e)}error(e){globals.error(e)}kickPlayer(e){this.kickedPlayers.push(e)}database(){return globals.database()}action(){return this.currentAction}state(e,t){return void 0===e?this.nextGame.state:void 0===t?this.nextGame.state[e]:void(this.nextGame.state[e]=t)}playerList(){return Object.keys(this.nextGame.players)}playerCount(){return Object.keys(this.nextGame.players).length}players(e,t){return void 0===e?this.nextGame.players:void 0===t?this.nextGame.players[e]:void(this.nextGame.players[e]=t)}rules(e,t){return void 0===e?this.nextGame.rules:void 0===t?this.nextGame.rules[e]:void(this.nextGame.rules[e]=t)}prev(e){return"object"==typeof e&&(this.nextGame.prev=e),this.nextGame.prev}next(e){return"object"==typeof e&&(this.nextGame.next=e),this.nextGame.next}setTimelimit(e){e=e||this.defaultSeconds,this.nextGame.timer||(this.nextGame.timer={}),this.nextGame.timer.set=e}reachedTimelimit(e){return void 0!==e.timeleft&&e.timeleft<=0}event(e,t){if(!t)return this.nextGame.events[e];this.nextGame.events[e]=t||{}}clearEvents(){this.nextGame.events={}}};let t=e.database(),s={state:{_qid:0,_history:[],category:"",question:"",choices:[],round:0,stage:0},players:{},rules:{rounds:10,maxplayers:10},next:{},events:[]};const i=new class{onNewGame(t){e.setGame(s),this.startGame()}startGame(){let t=e.players();for(var s in t)t[s].score=0;this.nextRound()}onSkip(t){let s=e.state();s.stage,0===s.stage?this.endOfRound():this.nextRound()}nextQuestion(){e.next({id:"*"}),this.processNextQuestion(),e.setTimelimit(20)}endOfRound(){let s=e.state();s.stage+=1,this.processCorrectAnswers(),e.setTimelimit(6);let i=t[s._qid];s.a=i.a}nextRound(){let t=e.state(),s=e.rules();t.round>=s.rounds?this.processWinners():(t.round+=1,t.stage=0,e.event("q",t.round),this.resetPlayerChoices(),this.nextQuestion())}onJoin(t){if(!t.user.id)return;let s=e.players(t.user.id);s&&(s.score=0)}onLeave(t){t.user.id,e.playerList().length<=1&&this.processWinners()}onPick(t){let s=e.state(),i=e.players(t.user.id),r=t.payload.choice;if(r<0||r>s.choices.length)return void e.ignore();i.choice=r,e.event("picked"),s.picked=i.id;let n=0,a=e.playerList();for(var o of a){let t=e.players(o);-1!=t.choice&&void 0!==t.choice&&null!=t.choice&&n++}n>=a.length&&this.onSkip()}resetPlayerChoices(){let t=e.players();for(var s in t)t[s].choice=-1}processNextQuestion(){let s=e.state(),i=Math.floor(Math.random()*t.length);if(s._history.includes(i))return void this.processNextQuestion();let r=t[i];if(s._qid=i,s.question=r.q,s.category=r.c,"boolean"==r.t)s.choices=["True","False"];else{s.choices=[],s.choices.push(r.a);for(let e=0;e<r.i.length;e++)s.choices.push(r.i[e]);s.choices.sort()}s._history.push(i)}processWinners(){let t=[],s=e.players();for(var i in s)s[i].id=i,t.push(s[i]);t.sort(((e,t)=>t.score-e.score));let r=null,n=0,a=[];for(var o=0;o<Math.min(t.length,10);o++){let e=t[o];null!=r&&r!=e.score&&n++,e.rank=n,r=e.score,a.push(e.id)}for(var i in s)delete s[i].id;e.state().winners=a,e.gameover(a)}processCorrectAnswers(){let s=e.players(),i=e.state();if(!(i.round<=0))for(var r in s){let e=s[r];void 0!==e.choice&&null!=e.choice&&-1!=e.choice&&(t[i._qid].a==i.choices[e.choice]?e.score+=10:e.score-=2)}}};e.on("gamestart",(e=>i.onNewGame(e))),e.on("skip",(e=>i.onSkip(e))),e.on("join",(e=>i.onJoin(e))),e.on("leave",(e=>i.onLeave(e))),e.on("pick",(e=>i.onPick(e))),e.commit()})();